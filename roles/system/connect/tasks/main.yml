---
- name: Attempt to connect on non-standard port first
  wait_for:
    host: "{{ ansible_host }}"
    port: "{{ ansible_port }}"
    timeout: 3
  ignore_errors: true
  register: ssh_check_test
  delegate_to: localhost
  when: ansible_connection != 'local'

- name: Revert to standard port 22 for SSH if the "secure" port has not been configured yet
  set_fact:
    ansible_port: "22"
  when:
    - ansible_connection != 'local'
    - ssh_check_test.failed is defined
    - ssh_check_test.failed

- name: Ensure python-netaddr is installed on Ansible controller host
  become: false
  pip:
    name: netaddr
  delegate_to: localhost

- name: Determine the VLAN (set to cloud if none match)
  vars:
    netmask: "24"
  block:
    - name: Set value for the variable vlan_ip
      set_fact:
        vlan_ip: "{{ hosts
          | map('extract', hosts)
          | selectattr('hostname', 'defined')
          | selectattr('hostname', 'equalto', hostname)
          | map(attribute='ip_address')
          | flatten }}"
    - name: Set value for the variable cidr
      set_fact:
        cidr: "{{ (vlan_ip[0] + '/' + netmask) | ipaddr('network/prefix') }}"
      when: vlan_ip
    - name: Set value for the variable vlan
      set_fact:
        vlan: "{{ item.key | default('cloud') }}"
      loop: "{{ lookup('dict', lan_network) }}"
      when:
        - vlan_ip
        - cidr in item.value
  always:
    - name: Set value for the variable vlan
      set_fact:
        vlan: cloud
      when: not vlan_ip

- name: Set miscellaneous facts
  set_fact:
    docker_tls_fqdn: "{{ fqdn }}"
    #   kibana_enrollment_id: "{{ vlan }}"

# See https://stackoverflow.com/questions/66897203/converting-data-structure-in-ansible
- name: Set app_host_map fact
  set_fact:
    app_host_map: "{{ new_app_map | default({}) | combine({item.1: item.0.key}) }}"
  with_subelements:
    - "{{ app_map | dict2items }}"
    - value

- name: Debug new_app_map
  debug:
    msg: "{{ app_host_map }}"

- name: Set the appropriate netdata room
  set_fact:
    netdata_room: "{{ netdata_rooms[vlan] }}" # TODO: Improve this method so that we can segment different cloud providers
  when:
    - netdata_rooms is defined

- name: Set cloud VLAN facts
  set_fact:
    add_hosts: false
    dns_provider: 1.1.1.1#cloudflare-dns.com
    dns_fallback_provider: 1.0.0.1#cloudflare-dns.com
    https_repository_prefix: https://
  when: vlan == 'cloud'
