---
- name: Determine whether or not a Desktop Environment is installed
  stat:
    path: "{{ item }}"
  with_items:
    - /usr/bin/gnome-session
    - /usr/bin/xfce4-session
    - /usr/bin/lxsession
    - /usr/bin/kded5
    - /usr/bin/icewm-session
    - /usr/bin/mate-session
    - /usr/bin/cinnamon
  register: session_files

- name: Set results of checking for Desktop Environment to a variable
  set_fact:
    desktop_env_results: "{{ session_files | community.general.json_query('results[*].stat.exists') }}"

- name: Calculate Swap size based on RAM size
  set_fact:
    swap_space: "{% set ram = (ansible_memtotal_mb / 1024) | round %}
      {% if(ram <= 8) %}
      {{ (ram * 2) | round | int }}G
      {% elif(ram > 8 and ram <= 32) %}
      {{ ((ram / 4) + ram) | round | int }}G
      {% elif(ram > 32 and ram <= 64) %}
      {{ ((ram / 8) + ram) | round | int }}G
      {% elif(ram > 64) %}
      {{ ((ram / 10) + ram) | round | int }}G
      {% endif %}"
  when: "true in desktop_env_results"

- name: Create Swap volume (when ZFS is used for the root partition)
  block:
    - name: Check if the ZFS rpool/swapfile volume exists
      community.general.zfs_facts:
        dataset: rpool/swapfile
      register: zfs_swapvol
      failed_when: false
    - name: Find the PAGESIZE
      command: getconf PAGESIZE
      register: pagesize_value
      changed_when: false
      when: zfs_swapvol.msg is defined
    - name: Create rpool/swapfile volume
      community.general.zfs:
        name: rpool/swapfile
        state: present
        extra_zfs_properties:
          volsize: "{{ swap_space }}"
          volblocksize: "{{ pagesize_value.stdout | int }}"
          compression: zle
          logbias: throughput
          sync: always
          primarycache: metadata
          secondarycache: none
          com.sun:auto-snapshot: false
      register: zfs_swap
      when: zfs_swapvol.msg is defined
    - name: Format rpool/swapfile
      command: mkswap -f /dev/zvol/rpool/swapfile
      when: zfs_swap.changed
    - name: Turn on swap (using rpool/swapfile)
      command: swapon /dev/zvol/rpool/swapfile
      when: zfs_swap.changed
    - name: Ensure swap loads on boot
      lineinfile:
        dest: /etc/fstab
        regexp: /swapfile
        line: "/dev/zvol/rpool/swapfile none swap discard 0 0"
      when: zfs_swap.changed
  when: "'ZFS' in ansible_facts.cmdline.root"

- name: Find the Filesystem of / partition # noqa 303 305
  shell: set -o pipefail & mount | grep ' on / type '
  register: root_fs_type
  changed_when: false
  when: "'ZFS' not in ansible_facts.cmdline.root"

- name: Create Swap file (non btrfs, non-ZFS root filesystem)
  block:
    - name: Check if swap file already exists
      stat:
        path: /swapfile
      register: swapfile
    - name: Create /swapfile
      command: "fallocate -l {{ swap_space }} /swapfile"
      when: not swapfile.stat.exists
    - name: Set permissions on /swapfile
      file:
        path: /swapfile
        mode: 0600
    - name: Format /swapfile
      command: mkswap /swapfile
      when: not swapfile.stat.exists
    - name: Turn on swap
      command: swapon /swapfile
      when: not swapfile.stat.exists
    - name: Ensure swap loads on boot
      lineinfile:
        dest: /etc/fstab
        regexp: /swapfile
        line: "/swapfile none swap sw 0 0"
  when:
    - root_fs_type.stdout is defined
    - "'btrfs' not in root_fs_type.stdout"

- name: Create Swap file (btrfs root filesystem)
  block:
    - name: Check if swap file already exists
      stat:
        path: /swapfile
      register: swapfile
    - name: Create /swapfile
      command: truncate -s 0 /swapfile
      when: not swapfile.stat.exists
    - name: Set properties on the swapfile # noqa 305
      shell: |
        chattr +C /swapfile
        btrfs property set /swapfile compression none
    - name: Set the size of the swapfile
      command: "fallocate -l {{ swap_space }} /swapfile"
    - name: Set permissions on /swapfile
      file:
        path: /swapfile
        mode: 0600
    - name: Format /swapfile
      command: mkswap /swapfile
      when: not swapfile.stat.exists
    - name: Turn on swap
      command: swapon /swapfile
      when: not swapfile.stat.exists
    - name: Ensure swap loads on boot
      lineinfile:
        dest: /etc/fstab
        regexp: /swapfile
        line: "/swapfile none swap sw 0 0"
  when:
    - root_fs_type.stdout is defined
    - "'btrfs' in root_fs_type.stdout"

- name: Set swappiness
  sysctl:
    name: vm.swappiness
    value: "10"
    sysctl_file: /etc/sysctl.conf
    state: present
    reload: true

- name: Set vfs_cache_pressure
  sysctl:
    name: vm.vfs_cache_pressure
    value: "50"
    sysctl_file: /etc/sysctl.conf
    state: present
    reload: true
