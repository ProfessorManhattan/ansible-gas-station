---
- name: 'Ensure NGINX is installed'
  become_method: runas
  become_user: '{{ ansible_user }}'
  chocolatey.chocolatey.win_chocolatey:
    name: nginx
    state: "{{ app_state | default('present') }}"
    package_params:
      - '/installLocation:{{ nginx_install_path }}'

- name: Clone the error page repository
  git:
    depth: '1'
    dest: '{{ error_page_directory }}'
    repo: '{{ error_page_repository }}'
    version: master
    force: true

- name: Register file information for dhparam.pem
  ansible.windows.win_stat:
    path: '{{ dhparam_path }}'
  register: dhparam_pem

- name: Generate dhparam.pem for improved SSL security (this can take awhile..)
  ansible.windows.win_command: openssl dhparam -out {{ dhparam_path }} {{ dhparam_size | default(omit) }}
  when: not dhparam_pem.stat.exists

- name: Clear sites-available if configured to do so
  ansible.windows.win_file:
    path: "{{ sites_available_path + '*' }}"
    state: absent
  when: nginx_clear_sites_available

- name: Clear sites-enabled if configured to do so
  ansible.windows.win_file:
    path: "{{ sites_enabled_path + '*' }}"
    state: absent
  when: nginx_clear_sites_enabled

- name: Generate sites-available
  include_tasks: site-available.yml
  loop: '{{ apps }}'
  tags: nginx_configuration

- name: Generate sites-available for proxy host
  vars:
    nginx_proxy_host_override: true
  block:
    - include_tasks: site-available.yml
  loop: '{{ hosts | list }}'
  when:
    - nginx_proxy_host
    - not (item in apps)

- name: Restart NGINX
  ansible.windows.win_service:
    name: nginx
    state: restarted
