---
- name: "Ensure {{ app_name }}'s dependencies are installed"
  community.general.pacman:
    name: "{{ wazuh_dependencies }}"
    state: present
    update_cache: true

- name: Ensure Megabyte Labs configuration directory exists
  file:
    mode: 0700
    path: "{{ item }}"
    state: directory
  loop:
    - ~/.config
    - ~/.config/megabytelabs

- name: "Check if {{ app_name }} has configuration stored in ~/.config/megabytelabs/wazuh"
  stat:
    path: "~/.config/megabytelabs/wazuh"
  register: wazuh_config

- name: "Detect previously installed {{ app_name }} version"
  command: cat wazuh
  args:
    chdir: ~/.config/megabytelabs
  changed_when: false
  register: current_wazuh_version
  when: wazuh_config.stat.exists

- name: "Detect the latest {{ app_name }} version"
  uri:
    url: https://api.github.com/repos/wazuh/wazuh/releases/latest
  register: wazuh_latest_release_tag

- name: "Determine whether or not the latest version of {{ app_name }} is already installed"
  set_fact:
    install_wazuh: "{{ (current_wazuh_version.skipped | default(false)) or \
      ((not current_wazuh_version.skipped | default(false)) and (current_wazuh_version.stdout != wazuh_latest_release_tag.json.tag_name | replace('v','')) }}"

- name: "Ensure {{ app_name }}'s source directory is present"
  ansible.builtin.file:
    mode: 0755
    path: "{{ wazuh_src_dir }}"
    state: directory

- name: "Ensure older version of {{ app_name }} is uninstalled"
  file:
    path: "{{ wazuh_src_dir }}"
    state: absent
  when: install_wazuh

- name: "Ensure {{ app_name }}'s source is cloned and up-to-date"
  unarchive:
    url: "{{ 'https://github.com/wazuh/wazuh/archive/' + wazuh_latest_release_tag.json.tag_name + '.tar.gz' }}"
    dest: "{{ wazuh_src_dir }}"
    mode: 0755
    remote_src: true
  when: install_wazuh

- name: Set options for unattended installation
  blockinfile:
    path: "{{ wazuh_src_dir + '/etc/preloaded-vars.conf' }}"
    block: |
      USER_LANGUAGE="en"
      USER_NO_STOP="y"
      USER_INSTALL_TYPE="agent"
      USER_DIR="/var/ossec"
      USER_ENABLE_SYSCHECK="y"
      USER_ENABLE_ROOTCHECK="y"
      USER_ENABLE_OPENSCAP="y"
      USER_ENABLE_ACTIVE_RESPONSE="y"
  when: install_wazuh

- name: "Ensure {{ app_name }} is installed" # noqa 301 # TODO: Find and add `creates` and remove noqa
  command: ./install.sh
  args:
    chdir: "{{ wazuh_src_dir }}"
  when: install_wazuh

- name: "Save meta information about the version of {{ app_name }} that was installed"
  copy:
    dest: ~/.config/megabytelabs/wazuh
    mode: 0600
    content: |
      {{ wazuh_latest_release_tag.json.tag_name  | replace('v','') }}
  when: install_wazuh

- name: Run generic Linux tasks
  include_tasks: config-Linux.yml
  when: wazuh_manager_ip
