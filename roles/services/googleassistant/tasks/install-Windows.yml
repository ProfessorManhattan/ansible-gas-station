---
- name: Ensure Megabyte Labs configuration directory exists
  ansible.windows.win_file:
    path: '%USERPROFILE%\.config\megabytelabs'
    state: directory

- name: "Check if {{ app_name }} has configuration stored in '%USERPROFILE%/.config/megabytelabs/googleassistant'"
  ansible.windows.win_stat:
    path: '%USERPROFILE%\.config\megabytelabs\googleassistant'
  register: googleassistant_config

- name: "Detect previously installed {{ app_name }} version"
  ansible.windows.win_shell: type googleassistant
  args:
    chdir: '%USERPROFILE%\.config\megabytelabs'
  changed_when: false
  register: current_googleassistant_version
  when: googleassistant_config.stat.exists

- name: "Determine whether or not the latest version of {{ app_name }} is already installed"
  set_fact:
    install_googleassistant: "{{ (current_googleassistant_version.skipped | default(false)) or \
      ((not current_googleassistant_version.skipped | default(false)) and \
      (current_googleassistant_version.stdout | trim != googleassistant_latest_version)) }}"

- name: "Ensure {{ app_name }} is installed"
  become: false
  ansible.windows.win_package:
    path: "https://github.com/Melvin-Abraham/Google-Assistant-Unofficial-Desktop-Client/releases/download/\
      {{ googleassistant_latest_release_tag.json.tag_name }}/Google_Assistant-Setup-{{ googleassistant_latest_version }}.exe"
    state: "{{ app_state | default('present') }}"
    arguments: /S
  when: install_googleassistant

- name: "Save meta information about the version of {{ app_name }} that was installed"
  ansible.windows.win_copy:
    dest: '%USERPROFILE%\.config\megabytelabs\googleassistant'
    content: |
      {{ googleassistant_latest_version }}
  when: install_googleassistant

- name: Run user configuration tasks
  include_tasks: user-Windows.yml
  loop: "{{ user_configs }}"
  loop_control:
    label: "{{ user.username }}"
    loop_var: user
  when: (user.system is not defined) or ((user.system is defined) and (not user.system))
