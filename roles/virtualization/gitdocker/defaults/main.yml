---
# This makes it so that the backup cronjobs are run at 3AM
git_docker_backup_time: '3'

git_docker_projects: []
# An example configuration for git_docker_projects is provided below. The example below shows 2 different
# git-docker projects. The first one (name: Adminer) will reside in the
# /srv/adminer folder and backup files every night (depending on the git_docker_backup_time
# you choose). The repository is stored on GitLab in this case. The healthcheck_id is
# optional. If you choose to set up Healthchecks (and add the FQDN to the healthcheck_endpoint variable),
# then metrics (including cron-job "up-time") will be sent to your healthcheck_endpoint. You
# can specify the user you want to run the backup/restore tasks by adding user: username
# (e.g. "user: root" in the second project below). If no user is provided, then the tasks
# will be performed by ansible_user (and if ansible_user is undefined then the current user is used).
### EXAMPLE ###
# git_docker_projects:
#   - folder: /srv/adminer
#     healthcheck_id: 8feed43b-a150-4580-XXX
#     name: Adminer
#     repo: git@gitlab.com:megabyte-space/docker-X/adminer.git
#   - folder: /srv/codeserver
#     healthcheck_id: 7ede6aad-09aa-XXX
#     name: CodeServer
#     repo: git@gitlab.com:megabyte-space/docker-X/code-server.git
#     user: root

# Replace this URL with your own URL that is the FQDN for an instance of Healthchecks
# (https://github.com/healthchecks/healthchecks)
healthcheck_endpoint: health.megabyte.space
# Note: If you wish to disable the healthcheck feature, then set healthcheck_endpoint: false
